<hibernate-mapping>
    <class name = "ru.asemenov.models.Car" table = "car">
        <id name = "id" column = "id">
            <generator class = "identity"/>
        </id>
        <many-to-one name = "mark" column = "mark_id" class = "ru.asemenov.models.Mark"/>
        <many-to-one name = "model" column = "model_id" class = "ru.asemenov.models.Model"/>
        <many-to-one name = "body" column = "body_id" class = "ru.asemenov.models.Body"/>
        <property name = "year" column = "year"/>
        <property name = "distance" column = "distance"/>
        <many-to-one name = "transmission" column = "transmission_id" class = "ru.asemenov.models.Transmission"/>
        <many-to-one name = "engine" column = "engine_id" class = "ru.asemenov.models.Engine"/>
        <property name = "capacity" column = "engine_capacity"/>
        <property name = "price" column = "price"/>
        <many-to-one name = "user" column = "user_id" class = "ru.asemenov.models.User"/>
        <property name = "status" column = "status"/>

        <filter name="mark" condition=":mark = mark_id"/>
        <filter name="model" condition=":model = model_id"/>
        <filter name="body" condition=":body = body_id"/>
        <filter name="transmission" condition=":transmission = transmission_id"/>
        <filter name="engine" condition=":engine = engine_id"/>
    </class>
    <filter-def name="mark">
        <filter-param name="mark" type="int"/>
    </filter-def>
    <filter-def name="model">
        <filter-param name="model" type="int"/>
    </filter-def>
    <filter-def name="body">
        <filter-param name="body" type="int"/>
    </filter-def>
    <filter-def name="transmission">
        <filter-param name="transmission" type="int"/>
    </filter-def>
    <filter-def name="engine">
        <filter-param name="engine" type="int"/>
    </filter-def>
</hibernate-mapping>